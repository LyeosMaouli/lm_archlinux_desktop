# local.yml - Main playbook for ansible-pull
---
- name: Arch Linux Desktop Automation with Hyprland
  hosts: localhost
  connection: local
  become: true
  gather_facts: true

  vars:
    ansible_python_interpreter: /usr/bin/python3
    main_user: lyeosmaouli
    hostname: phoenix

  pre_tasks:
    - name: Update package cache
      pacman:
        update_cache: true
      changed_when: false
      tags: always

    - name: Verify system requirements
      assert:
        that:
          - ansible_facts['distribution'] == "Archlinux"
          - ansible_facts['architecture'] == "x86_64"
        fail_msg: "This playbook requires Arch Linux x86_64"
      tags: always

    - name: Set hostname
      hostname:
        name: "{{ hostname }}"
      tags: always

  roles:
    - role: base_system
      tags: ["base", "system"]

    - role: users_security
      tags: ["users", "security"]

    - role: system_hardening
      tags: ["security", "hardening"]

    - role: power_management
      tags: ["power", "hardware"]

    - role: hyprland_desktop
      tags: ["desktop", "hyprland"]

    - role: aur_packages
      tags: ["aur", "packages"]

    - role: development_tools
      tags: ["development", "tools"]
      when: install_development_tools | default(true)

    - role: user_environment
      tags: ["environment", "dotfiles"]

    - role: monitoring
      tags: ["monitoring", "maintenance"]

  post_tasks:
    - name: Enable essential services
      systemd:
        name: "{{ item }}"
        enabled: true
        state: started
      loop:
        - NetworkManager
        - systemd-timesyncd
        - systemd-resolved
        - bluetooth
        - fstrim.timer
      tags: always

    - name: Final system verification
      debug:
        msg: "System configuration completed successfully for {{ main_user }}@{{ hostname }}!"
      tags: always
