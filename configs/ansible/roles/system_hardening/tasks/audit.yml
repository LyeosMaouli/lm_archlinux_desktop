---
# Audit system configuration tasks

- name: Install audit system
  pacman:
    name: audit
    state: present
  tags: audit, packages

- name: Create audit rules directory
  file:
    path: /etc/audit/rules.d
    state: directory
    mode: '0750'
  tags: audit

- name: Configure audit system
  template:
    src: audit/auditd.conf.j2
    dest: /etc/audit/auditd.conf
    mode: '0640'
    backup: yes
  notify: restart auditd
  tags: audit

- name: Create comprehensive audit rules
  copy:
    content: |
      # Audit rules for security monitoring
      # Generated by Ansible
      
      # Remove any existing rules
      -D
      
      # Buffer Size
      -b 8192
      
      # Failure Mode
      -f 1
      
      # Audit the audit logs
      -w /var/log/audit/ -p wa -k auditlog
      
      # Audit system configuration
      -w /etc/audit/ -p wa -k auditconfig
      -w /etc/libaudit.conf -p wa -k auditconfig
      -w /etc/audisp/ -p wa -k audispconfig
      
      # Monitor for use of audit management tools
      -w /sbin/auditctl -p x -k audittools
      -w /sbin/auditd -p x -k audittools
      
      # Special files
      -a always,exit -F arch=b64 -S mknod -S mknodat -k specialfiles
      -a always,exit -F arch=b32 -S mknod -S mknodat -k specialfiles
      
      # Mount operations
      -a always,exit -F arch=b64 -S mount -S umount2 -F auid!=4294967295 -k mount
      -a always,exit -F arch=b32 -S mount -S umount -S umount2 -F auid!=4294967295 -k mount
      
      # File deletions
      -a always,exit -F arch=b64 -S unlink -S unlinkat -S rename -S renameat -F auid!=4294967295 -k delete
      -a always,exit -F arch=b32 -S unlink -S unlinkat -S rename -S renameat -F auid!=4294967295 -k delete
      
      # Sudoers file changes
      -w /etc/sudoers -p wa -k scope
      -w /etc/sudoers.d/ -p wa -k scope
      
      # Passwd changes
      -w /etc/passwd -p wa -k passwd_changes
      -w /etc/group -p wa -k passwd_changes
      -w /etc/gshadow -p wa -k passwd_changes
      -w /etc/shadow -p wa -k passwd_changes
      -w /etc/opasswd -p wa -k passwd_changes
      
      # SSH configuration
      -w /etc/ssh/sshd_config -p wa -k sshd
      
      # Hostname changes
      -a always,exit -F arch=b64 -S sethostname -S setdomainname -k network_modifications
      -a always,exit -F arch=b32 -S sethostname -S setdomainname -k network_modifications
      
      # Network environment
      -w /etc/issue -p wa -k network
      -w /etc/issue.net -p wa -k network
      -w /etc/hosts -p wa -k network
      -w /etc/network/ -p wa -k network
      
      # Time changes
      -a always,exit -F arch=b64 -S adjtimex -S settimeofday -k time_change
      -a always,exit -F arch=b32 -S adjtimex -S settimeofday -S stime -k time_change
      -a always,exit -F arch=b64 -S clock_settime -k time_change
      -a always,exit -F arch=b32 -S clock_settime -k time_change
      -w /etc/localtime -p wa -k time_change
      
      # System startup scripts
      -w /etc/inittab -p wa -k init
      -w /etc/init.d/ -p wa -k init
      -w /etc/init/ -p wa -k init
      
      # Library search paths
      -w /etc/ld.so.conf -p wa -k libpath
      
      # Systemd
      -w /bin/systemctl -p x -k systemd
      -w /etc/systemd/ -p wa -k systemd
      
      # Module loading and unloading
      -w /sbin/insmod -p x -k modules
      -w /sbin/rmmod -p x -k modules
      -w /sbin/modprobe -p x -k modules
      -a always,exit -F arch=b64 -S init_module -S delete_module -k modules
      
      # System administrator actions
      -a always,exit -F arch=b64 -F euid=0 -S execve -k admin_commands
      -a always,exit -F arch=b32 -F euid=0 -S execve -k admin_commands
      
      # Privilege escalation
      -w /bin/su -p x -k priv_esc
      -w /usr/bin/sudo -p x -k priv_esc
      -w /etc/sudoers -p rw -k priv_esc
      
      # Login and logout events
      -w /var/log/lastlog -p wa -k logins
      -w /var/run/faillock/ -p wa -k logins
      
      # Session initiation information
      -w /var/run/utmp -p wa -k session
      -w /var/log/wtmp -p wa -k session
      -w /var/log/btmp -p wa -k session
      
      # System calls
      -a always,exit -F arch=b64 -S personality -k bypass
      -a always,exit -F arch=b32 -S personality -k bypass
      
      # Cron configuration & scheduled jobs
      -w /etc/cron.allow -p wa -k cron
      -w /etc/cron.deny -p wa -k cron
      -w /etc/cron.d/ -p wa -k cron
      -w /etc/cron.daily/ -p wa -k cron
      -w /etc/cron.hourly/ -p wa -k cron
      -w /etc/cron.monthly/ -p wa -k cron
      -w /etc/cron.weekly/ -p wa -k cron
      -w /etc/crontab -p wa -k cron
      -w /var/spool/cron/crontabs/ -k cron
      
      # User, group, password databases
      -w /etc/group -p wa -k etcgroup
      -w /etc/passwd -p wa -k etcpasswd
      -w /etc/gshadow -k etcgroup
      -w /etc/shadow -k etcpasswd
      -w /etc/security/opasswd -k opasswd
      
      # Lock the configuration
      -e 2
    dest: "{{ audit_rules_file }}"
    mode: '0640'
  notify: restart auditd
  tags: audit, rules

- name: Create audit log directory
  file:
    path: "{{ audit_log_file | dirname }}"
    state: directory
    mode: '0750'
    owner: root
    group: root
  tags: audit

- name: Configure audit log rotation
  copy:
    content: |
      {{ audit_log_file }} {
          daily
          rotate {{ audit_num_logs }}
          compress
          delaycompress
          missingok
          notifempty
          create 0640 root root
          postrotate
              /bin/systemctl reload auditd.service > /dev/null 2>&1 || true
          endscript
      }
    dest: /etc/logrotate.d/audit
    mode: '0644'
  tags: audit, logging

- name: Enable and start auditd service
  systemd:
    name: auditd
    enabled: yes
    state: started
  tags: audit

- name: Create audit analysis script
  copy:
    content: |
      #!/bin/bash
      # Audit Log Analysis Script
      
      AUDIT_LOG="{{ audit_log_file }}"
      
      echo "=== Audit System Status ==="
      systemctl status auditd --no-pager
      
      echo
      echo "=== Audit Statistics ==="
      auditctl -s
      
      echo
      echo "=== Recent Failed Login Attempts ==="
      ausearch -k logins -ts recent | grep "res=failed" | tail -10
      
      echo
      echo "=== Recent Privilege Escalations ==="
      ausearch -k priv_esc -ts recent | tail -10
      
      echo
      echo "=== Recent File Deletions ==="
      ausearch -k delete -ts recent | tail -10
      
      echo
      echo "=== Recent Administrative Commands ==="
      ausearch -k admin_commands -ts recent | tail -10
      
      echo
      echo "=== Recent System Configuration Changes ==="
      ausearch -k passwd_changes -ts recent | tail -5
      ausearch -k sshd -ts recent | tail -5
      
      echo
      echo "=== Audit Rules Summary ==="
      auditctl -l | wc -l
      echo "Total audit rules loaded"
    dest: /usr/local/bin/audit-analysis
    mode: '0755'
  tags: audit, monitoring

- name: Create audit cleanup script
  copy:
    content: |
      #!/bin/bash
      # Audit Log Cleanup and Maintenance
      
      echo "=== Audit Maintenance ==="
      
      # Compress old audit logs
      find /var/log/audit -name "audit.log.*" -mtime +7 -exec gzip {} \;
      
      # Remove very old compressed logs
      find /var/log/audit -name "audit.log.*.gz" -mtime +30 -delete
      
      # Check audit daemon status
      if ! systemctl is-active --quiet auditd; then
          echo "WARNING: auditd is not running"
          systemctl start auditd
      fi
      
      # Check disk space
      DISK_USAGE=$(df /var/log/audit | tail -1 | awk '{print $5}' | sed 's/%//')
      if [ "$DISK_USAGE" -gt 80 ]; then
          echo "WARNING: Audit log partition is ${DISK_USAGE}% full"
      fi
      
      echo "Audit maintenance completed"
    dest: /usr/local/bin/audit-maintenance
    mode: '0755'
  tags: audit, maintenance