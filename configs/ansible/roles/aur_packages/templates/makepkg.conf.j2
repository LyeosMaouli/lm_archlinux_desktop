# Makepkg configuration for {{ aur_user }}
# Generated by Ansible - DO NOT EDIT MANUALLY

#########################################################################
# SOURCE ACQUISITION
#########################################################################

# The download utilities that makepkg should use to acquire sources
DLAGENTS=('file::/usr/bin/curl -gqC - -o %o %u'
          'ftp::/usr/bin/curl -gqfC - --ftp-pasv --retry 3 --retry-delay 3 -o %o %u'
          'http::/usr/bin/curl -gqb "" -fLC - --retry 3 --retry-delay 3 -o %o %u'
          'https::/usr/bin/curl -gqb "" -fLC - --retry 3 --retry-delay 3 -o %o %u'
          'rsync::/usr/bin/rsync --no-motd -z %u %o'
          'scp::/usr/bin/scp -C %u %o')

# Other common tools:
# /usr/bin/snarf
# /usr/bin/lftpget -c
# /usr/bin/wget

#########################################################################
# ARCHITECTURE, COMPILE FLAGS
#########################################################################

CARCH="{{ ansible_architecture }}"
CHOST="{{ ansible_architecture }}-pc-linux-gnu"

# Compiler and Linker Flags
CPPFLAGS="-D_FORTIFY_SOURCE=2"
CFLAGS="-march=x86-64 -mtune=generic -O2 -pipe -fno-plt -fexceptions \
        -Wp,-D_FORTIFY_SOURCE=2 -Wformat -Werror=format-security \
        -fstack-clash-protection -fcf-protection"
CXXFLAGS="$CFLAGS -Wp,-D_GLIBCXX_ASSERTIONS"
LDFLAGS="-Wl,-O1,--sort-common,--as-needed,-z,relro,-z,now"
RUSTFLAGS="-C force-frame-pointers=yes"

# Make Flags
MAKEFLAGS="{{ makepkg_config.makeflags }}"

# Debug
DEBUG_CFLAGS="-g -fvar-tracking-assignments"
DEBUG_CXXFLAGS="$DEBUG_CFLAGS"
DEBUG_RUSTFLAGS="-C debuginfo=2"

#########################################################################
# BUILD ENVIRONMENT
#########################################################################

# Makepkg defaults: BUILDENV=(!distcc !color !ccache check !sign)
BUILDENV=(!distcc color !ccache check !sign)

# If using DistCC, your MAKEFLAGS will also need modification. In addition,
# specify a space-delimited list of hosts running in the DistCC cluster.
#DISTCC_HOSTS=""

# Specify a directory for package building.
BUILDDIR={{ yay_config.build_dir }}

#########################################################################
# GLOBAL PACKAGE OPTIONS
#########################################################################

# These are default values for the options=() settings
OPTIONS=(strip docs !libtool !staticlibs emptydirs zipman purge !debug)

# File integrity checks to use. Valid: md5, sha1, sha224, sha256, sha384, sha512, b2
INTEGRITY_CHECK=({% if makepkg_config.integrity_check %}sha256{% endif %})

# Options to be used when stripping binaries. See `man strip' for details.
STRIP_BINARIES="--strip-all"

# Options to be used when stripping shared libraries. See `man strip' for details.
STRIP_SHARED="--strip-unneeded"

# Options to be used when stripping static libraries. See `man strip' for details.
STRIP_STATIC="--strip-debug"

# Manual (man and info) directories to compress (if zipman is specified)
MAN_DIRS=({usr{,/local}{,/share},opt/*}/{man,info})

# Doc directories to remove (if !docs is specified)
DOC_DIRS=(usr/{,local/}{,share/}{doc,gtk-doc} opt/*/{doc,gtk-doc})

# Files to be removed from all packages (if purge is specified)
PURGE_TARGETS=(usr/{,share}/info/dir .packlist *.pod)

# Directory to store source code in for debug packages
DBGSRCDIR="/usr/src/debug"

#########################################################################
# PACKAGE OUTPUT
#########################################################################

# These are default values for the options=() settings
PKGDEST={{ yay_config.build_dir }}/packages
SRCDEST={{ yay_config.build_dir }}/sources
SRCPKGDEST={{ yay_config.build_dir }}/srcpackages
LOGDEST={{ yay_config.build_dir }}/logs

# Packager: name/email of the person or organization building packages
PACKAGER="{{ makepkg_config.packager }}"

# Specify a key to use for package signing
GPGKEY=""

#########################################################################
# COMPRESSION DEFAULTS
#########################################################################

# WARNING: Do NOT modify these variables unless you know what you are
#          doing.
{% if makepkg_config.compress_xz %}
COMPRESSGZ=(gzip -c -f -n)
COMPRESSBZ2=(bzip2 -c -f)
COMPRESSXZ=(xz -c -z -)
COMPRESSZST=(zstd -c -z -q -)
COMPRESSLRZ=(lrzip -q)
COMPRESSLZO=(lzop -q)
COMPRESSZ=(compress -c -f)
COMPRESSLZ4=(lz4 -q)
COMPRESSLZ=(lzip -c -f)

# Compression to use (override with the -z option)
PKGEXT='.pkg.tar.xz'
SRCEXT='.src.tar.gz'
{% endif %}